<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Loading some constants -->
  <xacro:include filename="$(find uuv_descriptions)/urdf/common.urdf.xacro"/>
  <!-- Loading file with sensor macros -->
  <xacro:include filename="$(find uuv_sensor_ros_plugins)/urdf/sensor_snippets.xacro"/>
  <!-- Loading the UUV simulator ROS plugin macros -->
  <xacro:include filename="$(find uuv_gazebo_ros_plugins)/urdf/snippets.xacro"/>  
  <!-- Loading vehicle's specific macros -->
  <xacro:include filename="$(find mantaray_description)/urdf/snippets.xacro"/>

  <!--
    Vehicle's parameters (remember to enter the model parameters below)
  -->

  <xacro:property name="mass" value="22.102392"/>
  <!-- Center of gravity -->
  <!-- <xacro:property name="cog" value="1.8 -1.17088 -1.62"/> -->
  <xacro:property name="cog" value="0.000018 -0.017088 -0.000362"/>

  <!-- Fluid density -->
  <!-- <xacro:property name="rho" value="1028"/> -->
  <xacro:property name="rho" value="1028"/>

  <!--
    Visual mesh file for the vehicle, usually in DAE (Collada) format. Be sure to store the
    mesh with the origin of the mesh on the same position of the center of mass, otherwise
    the mesh pose will have to be corrected below in the <visual> block.
    Open the meshes for the RexROV vehicle in Blender to see an example on the mesh placement.
  -->
  <xacro:property name="visual_mesh_file" value="file://$(find mantaray_description)/meshes/visual_base_link.stl"/>

  <!-- Vehicle macro -->
  <xacro:macro name="mantaray_base" params="namespace *gazebo use_simplified_mesh inertial_reference_frame">

    <link name="${namespace}/base_link"/>

      <joint name="${namespace}/base_link_to_chassis" type="fixed">
        <parent link="${namespace}/base_link"/>
        <child link="${namespace}/chassis"/>
      </joint>

      <!-- Rigid body description of the base link -->
      <link name="${namespace}/chassis">
        <!--
          Be careful to setup the coefficients for the inertial tensor,
          otherwise your model will become unstable on Gazebo
        -->
        <pose>0 0 .154636 0 0 0</pose>
        <inertial>
          <mass value="${mass}" />
          <origin xyz="${cog}" rpy="0 0 0"/>
          <inertia ixx="1.343163" ixy="0.000003" ixz="0.000132" iyy="1.793012" iyz="0.000084" izz="0.649198"/> 
        </inertial>
      <!-- Units are in kg * meters^2 -->

        <visual name='visual'>
          <transparency>1</transparency>
          <origin xyz="0 0 0.204636" rpy="0 0 0"/>
          <geometry>
            <mesh filename="${visual_mesh_file}" scale="1 1 1" />
          </geometry>
        </visual>

        <collision name='body_collision'>
          <origin xyz="0 0 .154636" rpy="0 0 0"/>
          <geometry>
            <box size="0.2235 0.817 0.32"/>
          </geometry>
        </collision>
        
        <collision name='right_wing_collision'>
          <origin xyz="-0.22 0.0007 .197" rpy="0 0 0"/>
          <geometry>
            <box size=".217 .8083 0.093"/>
          </geometry>
        </collision>
        
        <collision name='left_wing_collision'>
          <origin xyz="0.21 -0.001 0.197" rpy="0 0 0"/>
          <geometry>
            <box size=".209 .8083 0.093"/>
          </geometry>
        </collision>
      </link>



    <gazebo reference="${namespace}/base_link">
      <selfCollide>false</selfCollide>
    </gazebo>

    <!-- Set up hydrodynamic plugin given as input parameter -->
    <xacro:insert_block name="gazebo"/>

    <!-- Include the thruster modules -->
    <xacro:include filename="$(find mantaray_description)/urdf/actuators.xacro"/>

    <!-- Include the sensor modules -->
    <xacro:include filename="$(find mantaray_description)/urdf/sensors.xacro"/>

  </xacro:macro>

</robot>
